import pyxel, random
pyxel.init(256, 256, title="Nuit du c0de")

Bomberman = [120,120]
SceneNiveau =0
Vies = 4
Vitesse = 2
BombeListe = []
ExplosionsListe = []
BoostsListe = []
pyxel.load("res.pyxres")

def attendre_début():
    global SceneNiveau
    if SceneNiveau == 0 and  pyxel.btn(pyxel.KEY_RETURN):
        SceneNiveau = 1

def bomberman_deplacement(bomberman):
    x = bomberman[0]
    y = bomberman[1]
    if pyxel.btn(pyxel.KEY_RIGHT):
        if (x < 240) :
            x = x + Vitesse
    if pyxel.btn(pyxel.KEY_LEFT):
        if (x > -3) :
            x = x - Vitesse
    if pyxel.btn(pyxel.KEY_DOWN):
        if (y < 238) :
            y = y + Vitesse
    if pyxel.btn(pyxel.KEY_UP):
        if (y > 1) :
            y = y - Vitesse
    bomberman[0] = x
    bomberman[1] = y
    return bomberman
    
def boosts_creation(boosts_liste):
    if (pyxel.frame_count % 400 == 0 and len(boosts_liste) <3):
        boosts_liste.append([random.randint(48, 216), random.randint(48, 216)])
    return boosts_liste
    
def bomberman_boost(vitesse):
    for boost in BoostsListe:
        if boost[0] <= Bomberman[0]+8 and boost[1] <= Bomberman[1]+8 and boost[0]+8 >= Bomberman[0] and boost[1]+8 >= Bomberman[1]:
            BoostsListe.remove(boost)
            vitesse += 5
    if (pyxel.frame_count % 60 == 0 and vitesse > 5):
        vitesse -= 5
    return vitesse
    
def bombes_creation(bombe_liste):
    if (pyxel.frame_count % 30 == 0):
        bombe_liste.append([random.randint(0, 248), 0])
    return bombe_liste

def bombes_deplacement(bombe_liste):
    for bombe in bombe_liste:
        bombe[1] += 2
        if  bombe[1]>256:
            bombe_liste.remove(bombe)
    return bombe_liste

def detection_collision(vies):
    for bombe in BombeListe:
        if bombe[0] <= Bomberman[0]+8 and bombe[1] <= Bomberman[1] +8 and bombe[0]+8 >= Bomberman[0] and bombe[1]+8 >= Bomberman[1]:
            BombeListe.remove(bombe)
            vies -= 1
            explosions_creation(Bomberman[0], Bomberman[1])
    return vies
    
def explosions_creation(x, y):
    ExplosionsListe.append([x, y, 0])
    
def explosions_animation():
    global ExplosionsListe
    for explosion in ExplosionsListe:
        explosion[2] +=1
        if explosion[2] == 12:
            ExplosionsListe.remove(explosion)                

def update():
    global Bomberman, BombeListe, Vies, ExplosionsListe, BoostsListe, Vitesse, SceneNiveau
    if SceneNiveau == 0:
        attendre_début()
    elif SceneNiveau == 1:
        Bomberman = bomberman_deplacement(Bomberman)
        BombeListe = bombes_creation(BombeListe)
        BombeListe = bombes_deplacement(BombeListe)
        BoostsListe = boosts_creation(BoostsListe)
        Vitesse = bomberman_boost(Vitesse)
        Vies = detection_collision(Vies)
        explosions_animation()
        
def draw():
    global SceneNiveau
    pyxel.cls(0)
    if SceneNiveau == 0:
        pyxel.bltm(0,0,0,512,0,255,255)
    elif SceneNiveau == 1:
        pyxel.bltm(0,0,0,0,0,255,255)
        pyxel.text(5,5, 'Vies:'+ str(Vies), 7)
        for boost in BoostsListe:
            pyxel.blt(boost[0], boost[1], 0, 64, 0, 16, 16,6)
        for bombe in BombeListe:
            pyxel.blt(bombe[0], bombe[1], 0, 48, 0, 16, 16,0)
        pyxel.blt(Bomberman[0], Bomberman[1], 0, 15, 0, 16, 16,0)
        for explosion in ExplosionsListe:
            pyxel.circb(explosion[0]+4, explosion[1]+4, 2*(explosion[2]//4), 8+explosion[2]%3)
    elif SceneNiveau == 2:
        pyxel.bltm(0,0,0,256,0,255,255)

    if Vies <= 0:
        SceneNiveau = 2

pyxel.run(update, draw)
